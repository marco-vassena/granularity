-- Indexed cross equivalence

open import Generic.CrossEq

module Generic.ICrossEq
  {Tyโ : Set} {Tyโ : Set}
  (Label : Set)
  (๐ป : CEq Tyโ Tyโ) where

open CEq ๐ป renaming (_โโ_ to _โโแต_ ; โฆ_โง to โฆ_โงแต ; refl-โโ to refl-โโแต)
open import Relation.Binary.PropositionalEquality

record ICEq (Valueโ : Tyโ โ Set) (Valueโ : Tyโ โ Set) : Setโ where
  field
    โฆ_โง : โ {ฯโ} โ Valueโ ฯโ โ Label โ Valueโ โฆ ฯโ โงแต
    _โโโจ_,_โฉ_ : โ {ฯโ ฯโ} โ Valueโ ฯโ โ Label โ ฯโ โโแต ฯโ  โ Valueโ ฯโ โ Set
    -- ix-โโ : โ {ฯโ ฯโ โ} {vโ : Valueโ ฯโ} {vโ : Valueโ ฯโ} โ
    --            vโ โโโจ โ โฉ vโ โ ฯโ โโแต ฯโ
    refl-โโโจ_โฉ : โ {ฯโ} pc (v : Valueโ ฯโ) โ (โฆ v โง pc) โโโจ pc , refl-โโแต _  โฉ v

  _โโโจ_โฉ_ :  โ {ฯโ ฯโ} {{ฯโ : ฯโ โโแต ฯโ}} โ Valueโ ฯโ โ Label โ Valueโ ฯโ โ Set
  _โโโจ_โฉ_ {{ฯโ}} vโ โ vโ = vโ โโโจ โ , ฯโ โฉ vโ


  -- where
    -- where
    --   instance _ = refl-โโแต
